envs:
  port: 8083
  debug:
    query: DEBUG
    param: DEBUG
  database:
    name: movies-db
    username: dev
    password: dev123
    url: r2dbc:pool:postgres://localhost:5432/movies-db

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,prometheus,info,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true


#  endpoints:
#    web:
#      exposure:
#        include: health,prometheus
#  metrics:
#    distribution:
#      percentiles-histogram:
#        "[http.server.requests]": true
#  prometheus:
#    metrics:
#      export:
#        enabled: true
#      distribution:
#        percentiles-histogram:
#          "[http.server.requests]": true


server:
  port: ${envs.port}

spring:
  r2dbc:
    url: ${envs.database.url}
    username: dev
    password: dev123
  kafka:
    bootstrap-servers: localhost:9092
    topic: events

#spring:
#  r2dbc:
#    url: ${envs.database.url}
#    username: ${envs.database.username}
#    password: ${envs.database.password}

#  flyway:
#    url: jdbc:postgresql://localhost:5432/fin_api_test_db
#    locations: classpath:db/migration
#    user: ${spring.r2dbc.username}
#    password: ${spring.r2dbc.password}

springdoc:
  swagger-ui:
    path: /v3/swagger-ui.html
  api-docs:
    path: /v3/api-docs

logging:
  level:
    io.r2dbc.postgresql.QUERY: ${envs.debug.query}
    io.r2dbc.postgresql.PARAM: ${envs.debug.param}

settings:
  batchSize: 1000